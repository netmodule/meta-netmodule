From 31ba3dcb7158ef84f5f7b18636cb031e9f01b9d5 Mon Sep 17 00:00:00 2001
From: David Andrey <david.andrey@netmodule.com>
Date: Tue, 22 Jan 2013 10:16:07 +0100
Subject: [PATCH 13/17] ARM: xilinx: BSP: fix eth0 skew

Ethernet skew value are not initialized in the bootloader and
reseted after a FPGA update. This patch set the skew values
for eth0

Signed-off-by:David Andrey david.andrey@netmodule.com
---
 drivers/net/phy/micrel.c |   61 ++++++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 61 insertions(+), 0 deletions(-)

diff --git a/drivers/net/phy/micrel.c b/drivers/net/phy/micrel.c
index dea040a..430518e 100644
--- a/drivers/net/phy/micrel.c
+++ b/drivers/net/phy/micrel.c
@@ -42,6 +42,8 @@
 #define KS8737_CTRL_INT_ACTIVE_HIGH		(1 << 14)
 #define KSZ8051_RMII_50MHZ_CLK			(1 << 7)
 
+#define NETMODULE_Z4E  /* some specific board init */
+
 static int kszphy_ack_interrupt(struct phy_device *phydev)
 {
 	/* bit[7..0] int status, which is a read and clear register. */
@@ -96,9 +98,68 @@ static int ks8737_config_intr(struct phy_device *phydev)
 	return rc < 0 ? rc : 0;
 }
 
+
+
+/*
+ * Each FPGA reset leads to a PHY reset too. So let's do
+ * the setup again
+ */
+static int z4e_config_init(struct phy_device *phydev)
+{
+	int err;
+
+	if (((phydev->phy_id & ~PHY_ID_KSZ9031) & phydev->drv->phy_id_mask) == 0) {
+
+		err = phy_write(phydev, 0xD, 0x0002);
+		if (err < 0)
+			return err;
+
+		err = phy_write(phydev, 0xE, 0x0008); /* Reg 0x8 */
+		if (err < 0)
+			return err;
+
+		err = phy_write(phydev, 0xD, 0x4002);
+		if (err < 0)
+			return err;
+
+		err = phy_write(phydev, 0xE, 0x03FF); /* 3FF = max RXC and TXC delay */
+		if (err < 0)
+			return err;
+	}
+
+	else if (((phydev->phy_id & ~PHY_ID_KSZ9021) & phydev->drv->phy_id_mask) == 0) {
+
+		err = phy_write(phydev, 0xB, 0x8104); /* RGMII clock and control pad skew (reg 260) */
+		if (err < 0)
+			return err;
+
+		err = phy_write(phydev, 0xC, 0xF0F0);
+		if (err < 0)
+			return err;
+
+		err = phy_write(phydev, 0xB, 0x8105); /* RGMII RX pad skew (reg 261)*/
+		if (err < 0)
+			return err;
+
+		err = phy_write(phydev, 0xC, 0x0);
+		if (err < 0)
+			return err;
+	}
+	else {
+		printk (KERN_ERR "ZX3 unsupported PHY ID\n");
+	}
+
+	return 0;
+}
+
+
 static int kszphy_config_init(struct phy_device *phydev)
 {
+#ifdef NETMODULE_Z4E
+	return z4e_config_init (phydev);
+#else
 	return 0;
+#endif
 }
 
 static int ks8051_config_init(struct phy_device *phydev)
-- 
1.7.4.1

